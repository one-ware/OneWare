# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Publish Nuget Packages
on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI
  release:
    types:
      - published    # Run the workflow when a new GitHub release is published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  create_nuget:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x
      
      # Create the NuGet packages in the folder from the environment variable NuGetDirectory
      - run: dotnet pack ./src/OneWare.Essentials/OneWare.Essentials.csproj --configuration Release --output ${{ env.NuGetDirectory }}
      - run: dotnet pack ./src/OneWare.Settings/OneWare.Settings.csproj --configuration Release --output ${{ env.NuGetDirectory }}
      - run: dotnet pack ./src/OneWare.ProjectSystem/OneWare.ProjectSystem.csproj --configuration Release --output ${{ env.NuGetDirectory }}
      - run: dotnet pack ./src/OneWare.Output/OneWare.Output.csproj --configuration Release --output ${{ env.NuGetDirectory }}
      - run: dotnet pack ./src/OneWare.UniversalFpgaProjectSystem/OneWare.UniversalFpgaProjectSystem.csproj --configuration Release --output ${{ env.NuGetDirectory }}
      - run: dotnet pack ./src/OneWare.OssCadSuiteIntegration/OneWare.OssCadSuiteIntegration.csproj --configuration Release --output ${{ env.NuGetDirectory }}
      - run: dotnet pack ./src/OneWare.CloudIntegration/OneWare.CloudIntegration.csproj --configuration Release --output ${{ env.NuGetDirectory }}
      - run: dotnet pack ./src/OneWare.WaveFormViewer/OneWare.WaveFormViewer.csproj --configuration Release --output ${{ env.NuGetDirectory }}
      - run: dotnet pack ./src/OneWare.Vcd.Parser/OneWare.Vcd.Parser.csproj --configuration Release --output ${{ env.NuGetDirectory }}
      - run: dotnet pack ./src/OneWare.Vcd.Viewer/OneWare.Vcd.Viewer.csproj --configuration Release --output ${{ env.NuGetDirectory }}

      # Publish all NuGet packages to NuGet.org
      # Use --skip-duplicate to prevent errors if a package with the same version already exists.
      # If you retry a failed workflow, already published packages will be skipped without error.
      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
           dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
